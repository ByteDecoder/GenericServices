<?xml version="1.0"?>
<package >
  <!-- Steps to making a Nuget package.
   
   Setup
   =====
   1. Download NuGet.exe from and place it in the directory C:\User\Jon\
   2. Make sure path points to it by running the line below
   set PATH=%PATH%;C:\Users\Jon\
   
   To create nuget package
   =======================
   1. Update version numbers
      a. In the AssemblyVersionPart in NuGet folder 
      b. Update the version field below 
   2. RECOMPILE GenericServices in RELEASE MODE
   3. Update release notes in the nuget package
   4. Run the following two command lines
      cd C:\Users\Jon\Documents\Visual Studio 2013\Projects\GenericServices\GenericServices\NuGet
      Nuget pack GenericServices.nuspec -Symbols
   
   To Test locally
   ===============
   1. Copy to C:\Users\Jon\LocalNuget
   2. Go to SampleMvcWebApp
   3. Set Package manager->Package Source to All, or <your local source>
   4. Use the following package manager command in target 
      Install-Package GenericServices -Project <projectname>
      or
      Update-Package GenericServices
   
   To test via staging
   ===================
   1. Go to http://staging.nuget.org/ and log on normally
   2. Upload the package to check
   
   To upload to NuGet
   ==================
   Quickest way is via command line as it pushes both the package and the symboles
   Nuget SetApiKey <key>
   Nuget Push GenericServices.1.0.<ver>.nupkg
   
   -->
  <metadata>
    <id>GenericServices</id>
    <version>1.0.9</version>
    <title>GenericServices</title>
    <authors>Jon Smith</authors>
    <owners>Jon Smith</owners>
    <licenseUrl>https://github.com/JonPSmith/GenericServices/blob/master/licence.txt</licenseUrl>
    <projectUrl>https://github.com/JonPSmith/GenericServices</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/JonPSmith/GenericServices/master/GenericServices/NuGet/GenericServicesNuGetIcon128.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>
      Generic Services is a .NET class library to help build a service layer, i.e. a layer that acts as a facard/adapter between your data layers containing an Entity Framework database and your User Interface or HTTP service.
    </description>
    <releaseNotes>Changed config of AutoMapper mapping to use non-static approach</releaseNotes>
    <copyright>Copyright 2015</copyright>
    <tags>EntityFramework EF ASP.NET MVC DTO Validation Library</tags>
    <dependencies>
      <dependency id="GenericLibsBase" version="1.0.1" />
      <dependency id="EntityFramework" version="6.1.3" />
      <dependency id="AutoMapper" version="4.2.1" />
      <dependency id="DelegateDecompiler.EntityFramework" version="0.18" />
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="System.Core" targetFramework="net451" />
    </frameworkAssemblies>
  </metadata>
  <files>
    <file src="..\bin\Release\GenericServices.dll" target="lib" />
    <file src="..\bin\Release\GenericServices.xml" target="lib" />
  </files>
</package>